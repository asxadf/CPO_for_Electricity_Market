function[Day_Tra_All, Date_Tra_All] = Find_NT(NH, Link, Path_Data)
%% ------------------------------ Setting ------------------------------ %%
Num_Training_Day = 7;
Num_Data_Point   = 366;
%
%% -------------------------------Loading------------------------------- %%
[Num_Gen,...
 Num_Branch,...
 Num_Bus,...
 Num_City,...
 Num_Hour,...
 Num_RES,...
 Gen_Capacity,...
 Gen_Price,...
 Branch,...
 Load_Gro_SUM_All_ACT,...
 Load_Gro_SUM_All_DAF,...
 Load_Gro_SUM_Dis_ACT,...
 Load_Gro_SUM_Dis_DAF, Load_Gro_SUM_Dis_DAF_UB, Load_Gro_SUM_Dis_DAF_LB,...
 Load_Net_SUM_All_ACT,...
 Load_Net_SUM_All_DAF,...
 Load_Net_SUM_Dis_ACT,...
 Load_Net_SUM_Dis_DAF,...
 Load_City_All_ACT,...
 Load_City_All_DAF,...
 Load_City_Dis_ACT,...
 Load_City_Dis_DAF,...
 RES_SUM_All_ACT,...
 RES_SUM_All_DAF, RES_SUM_All_DAF_UB, RES_SUM_All_DAF_LB,...
 RES_SUM_Dis_ACT,...
 RES_SUM_Dis_DAF, RES_SUM_Dis_DAF_UB, RES_SUM_Dis_DAF_LB,...
 RES_Farm_All_ACT,...
 RES_Farm_All_DAF, RES_Farm_All_DAF_UB, RES_Farm_All_DAF_LB,...
 RES_Farm_Dis_ACT,...
 RES_Farm_Dis_DAF, RES_Farm_Dis_DAF_UB, RES_Farm_Dis_DAF_LB,...
 R_Sys_Req_All,...
 R_Sys_Req_Dis,...
 R_H_Req_All,...
 R_H_Req_Dis,...
 R_C_Req_All,...
 R_C_Req_Dis,...
 PTDF_Gen,...
 PTDF_City,...
 PTDF_RES,...
 GS_Price,...
 LS_Price,...
 BS_Price,...
 Date_All_List,...
 Day, Pre_W_UB, Pre_W_LB,...
 Unit_Quick,...
 Unit_Thermal] = Database_CPO_v7('2020-01-01', Link, Path_Data);
%
%% ------------------------- Compute Distances ------------------------ %%
Vector_ACT = Load_Net_SUM_All_ACT;
Vector_DAF = Load_Net_SUM_All_DAF;
Vector_GAP = 100*abs(Vector_DAF - Vector_ACT)./Vector_ACT;
for day_dis = 1:Num_Data_Point
    Vector_Score(1, day_dis) = norm(Vector_GAP(:, day_dis), 2);
end
%
%% ------------------------------ In Loop ------------------------------ %%
for day_dis = 1:Num_Data_Point
    %% ------------------------ Initialize ----------------------------- %%
    if day_dis == 1
        Day_Historic_1st = 1;
        Day_Historic_end = 1;
    end
    if day_dis > 1 && day_dis <= NH
        Day_Historic_1st = 1;
        Day_Historic_end = day_dis - 1;
    end
    if day_dis > NH
        Day_Historic_1st = day_dis - NH;
        Day_Historic_end = day_dis - 1;
    end
    Num_Historic_Day_Avai = Day_Historic_end - Day_Historic_1st + 1;
    Vector_Score_Avai{day_dis} = Vector_Score(Day_Historic_1st:Day_Historic_end)';
    Vector_Score_Avai_Sorted{day_dis} = sort(Vector_Score_Avai{day_dis}, 'descend');
    %
    %% ---------------------- Pick Training Days ----------------------- %%
    Vector_Score_Avai_Sorted_Tra{day_dis} = Vector_Score_Avai_Sorted{day_dis}(1:min([Num_Historic_Day_Avai, Num_Training_Day]));
    %
    %% ------------------ Find Index of Training Days ------------------ %%
    for day_tra = 1:min([Num_Historic_Day_Avai, Num_Training_Day])
        % For min mode
        Day_Tra_All{day_dis}(day_tra, 1)  = find(Vector_Score == Vector_Score_Avai_Sorted_Tra{day_dis}(day_tra));
        Date_Tra_All{day_dis}(day_tra, 1) = Date_All_List(Day_Tra_All{day_dis}(day_tra));
    end
    %
end
end